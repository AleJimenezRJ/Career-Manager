@page "/careers/list-specific-career/{careerName}"
@using UCR.ECCI.IS.VRCampus.Frontend.Blazor.Application.Services
@using UCR.ECCI.IS.VRCampus.Frontend.Blazor.Domain.Entities
@using UCR.ECCI.IS.VRCampus.Frontend.Blazor.Presentation.Components
@using MudBlazor
@using Microsoft.AspNetCore.Components.Web
@inject ICareerServices CareerService
@inject IWorkInformationServices WorkInformationServices
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<PageTitle>@(career?.Name?.Name ?? "Career Details") - Career Management System</PageTitle>

@if (career == null && !_isLoading)
{
    <!-- Career Not Found Section -->
    <MudPaper Class="pa-8 mb-8" Style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 20px; position: relative; overflow: hidden;">
        <div style="position: absolute; top: 0; right: 0; width: 200px; height: 200px; background: rgba(255,255,255,0.1); border-radius: 50%; transform: translate(50%, -50%);"></div>
        <div style="position: relative; z-index: 1; text-align: center;">
            <MudIcon Icon="@Icons.Material.Filled.Error" Style="font-size: 80px; margin-bottom: 24px; opacity: 0.9;" />
            <MudText Typo="Typo.h3" Style="font-weight: 700; margin-bottom: 16px;">
                Career Not Found
            </MudText>
            <MudText Typo="Typo.h6" Style="opacity: 0.9; margin-bottom: 24px;">
                The career "@CareerName" could not be found!
            </MudText>
            <MudButton Variant="Variant.Filled"
                       Color="Color.Surface"
                       StartIcon="@Icons.Material.Filled.ArrowBack"
                       Style="background: rgba(255,255,255,0.2); color: white; border-radius: 12px; text-transform: none; font-weight: 600; padding: 12px 24px; backdrop-filter: blur(10px);"
                       OnClick="GoBack">
                Back to Home
            </MudButton>
        </div>
    </MudPaper>
}
else if (_isLoading)
{
    <!-- Loading Section -->
    <MudPaper Class="pa-8 mb-8" Style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 20px;">
        <div style="text-align: center; padding: 40px;">
            <MudProgressCircular Color="Color.Surface" Indeterminate="true" Size="Size.Large" />
            <MudText Typo="Typo.h6" Style="margin-top: 24px; opacity: 0.9;">Loading career details...</MudText>
        </div>
    </MudPaper>
}
else
{
    <!-- Career Header Section -->
    <MudPaper Class="pa-8 mb-8" Style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 20px; position: relative; overflow: hidden;">
        <div style="position: absolute; top: 0; right: 0; width: 200px; height: 200px; background: rgba(255,255,255,0.1); border-radius: 50%; transform: translate(50%, -50%);"></div>
        <div style="position: relative; z-index: 1;">
            <MudGrid AlignItems="Center">
                <MudItem xs="12" md="8">
                    <MudText Typo="Typo.h3" Style="font-weight: 700; margin-bottom: 16px; background: linear-gradient(45deg, #ffffff, #f0f0f0); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">
                        @career!.Name?.Name
                    </MudText>
                    <div style="display: flex; gap: 12px; margin-bottom: 24px; flex-wrap: wrap;">
                        <div style="display: inline-block; padding: 8px 16px; border-radius: 12px; background: rgba(255,255,255,0.2); color: white; font-size: 0.9rem; font-weight: 500; backdrop-filter: blur(10px);">
                            @career!.Modality?.Value
                        </div>
                        <div style="@GetProgramTypeStyle()">
                            @((bool)career.IsSteam! ? "STEAM Program" : "Regular Program")
                        </div>
                        <div style="display: inline-block; padding: 8px 16px; border-radius: 12px; background: rgba(255,255,255,0.2); color: white; font-size: 0.9rem; font-weight: 500; backdrop-filter: blur(10px);">
                            @career.SemestersNumber?.Number Semesters
                        </div>
                    </div>
                    <div style="display: flex; gap: 16px; flex-wrap: wrap;">
                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Surface"
                                   StartIcon="@Icons.Material.Filled.ArrowBack"
                                   Style="background: rgba(255,255,255,0.2); color: white; border-radius: 12px; text-transform: none; font-weight: 600; padding: 12px 24px; backdrop-filter: blur(10px);"
                                   OnClick="GoBack">
                            Back to Home
                        </MudButton>
                        <MudButton Variant="Variant.Outlined"
                                   Color="Color.Surface"
                                   StartIcon="@(_isCalculating ? null : Icons.Material.Filled.Calculate)"
                                   Style="border-color: rgba(255,255,255,0.3); color: white; border-radius: 12px; text-transform: none; font-weight: 600; padding: 12px 24px;"
                                   OnClick="@(() => CalculateScholarshipWithLoading(career.Name?.Name))"
                                   Disabled="@_isCalculating">
                            @if (_isCalculating)
                            {
                                <MudProgressCircular Color="Color.Surface" Size="Size.Small" Indeterminate="true" />
                                <span style="margin-left: 8px;">Calculating...</span>
                            }
                            else
                            {
                                <span>Calculate Scholarship</span>
                            }
                        </MudButton>
                    </div>
                </MudItem>
                <MudItem xs="12" md="4">
                    <div style="text-align: center;">
                        <MudIcon Icon="@Icons.Material.Filled.School" Style="font-size: 120px; opacity: 0.3;" />
                    </div>
                </MudItem>
            </MudGrid>
        </div>
    </MudPaper>

    <!-- Career Details Section -->
    <MudGrid Spacing="4" Style="margin-bottom: 32px;">
        <!-- Description Card -->
        <MudItem xs="12" md="8">
            <MudCard Style="height: 100%; border-radius: 16px; border: 1px solid #f0f0f0; box-shadow: 0 8px 32px rgba(0,0,0,0.08);">
                <MudCardHeader Style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); border-radius: 16px 16px 0 0; padding: 24px;">
                    <CardHeaderContent>
                        <div style="display: flex; align-items: center; gap: 12px;">
                            <MudIcon Icon="@Icons.Material.Filled.Description" Style="font-size: 28px; color: #1976d2;" />
                            <MudText Typo="Typo.h5" Style="color: #2c3e50; font-weight: 600; margin: 0;">
                                Description
                            </MudText>
                        </div>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent Style="padding: 24px;">
                    <MudText Typo="Typo.body1" Style="color: #495057; line-height: 1.7; text-align: justify;">
                        @career!.Description?.Content
                    </MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Quick Stats Card -->
        <MudItem xs="12" md="4">
            <MudCard Style="height: 100%; border-radius: 16px; border: 1px solid #f0f0f0; box-shadow: 0 8px 32px rgba(0,0,0,0.08);">
                <MudCardHeader Style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); border-radius: 16px 16px 0 0; padding: 24px;">
                    <CardHeaderContent>
                        <div style="display: flex; align-items: center; gap: 12px;">
                            <MudIcon Icon="@Icons.Material.Filled.Analytics" Style="font-size: 28px; color: #1976d2;" />
                            <MudText Typo="Typo.h5" Style="color: #2c3e50; font-weight: 600; margin: 0;">
                                Quick Stats
                            </MudText>
                        </div>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent Style="padding: 24px;">
                    <div style="display: flex; flex-direction: column; gap: 20px;">

                        <div style="display: flex; justify-content: space-between; align-items: center; padding: 16px; border-radius: 12px; background: #f8f9fa; border-left: 4px solid #4caf50;">
                            <div>
                                <MudText Typo="Typo.caption" Style="color: #6c757d; font-weight: 500;">DURATION</MudText>
                                <MudText Typo="Typo.body1" Style="color: #2c3e50; font-weight: 600;">@career!.SemestersNumber?.Number Semesters</MudText>
                            </div>
                            <MudIcon Icon="@Icons.Material.Filled.Schedule" Style="color: #4caf50; font-size: 24px;" />
                        </div>

                        <div style="display: flex; justify-content: space-between; align-items: center; padding: 16px; border-radius: 12px; background: #f8f9fa; border-left: 4px solid #ff9800;">
                            <div>
                                <MudText Typo="Typo.caption" Style="color: #6c757d; font-weight: 500;">SCHOLARSHIP</MudText>
                                <MudText Typo="Typo.body1" Style="color: #2c3e50; font-weight: 600;"> @career!.Scholarship</MudText>
                            </div>
                            <MudIcon Icon="@Icons.Material.Filled.AttachMoney" Style="color: #ff9800; font-size: 24px;" />
                        </div>

                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <!-- Detailed Information Section -->
    <MudGrid Spacing="4" Style="margin-bottom: 32px;">
        <!-- Degree Information Card -->
        <MudItem xs="12" md="6">
            <MudCard Style="height: 100%; border-radius: 16px; border: 1px solid #f0f0f0; box-shadow: 0 8px 32px rgba(0,0,0,0.08);">
                <MudCardHeader Style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); border-radius: 16px 16px 0 0; padding: 24px;">
                    <CardHeaderContent>
                        <div style="display: flex; align-items: center; gap: 12px;">
                            <MudIcon Icon="@Icons.Material.Filled.WorkspacePremium" Style="font-size: 28px; color: #4caf50;" />
                            <MudText Typo="Typo.h5" Style="color: #2c3e50; font-weight: 600; margin: 0;">
                                Degree Information
                            </MudText>
                        </div>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent Style="padding: 24px;">
                    <div style="display: flex; flex-direction: column; gap: 20px;">
                        <div>
                            <MudText Typo="Typo.subtitle1" Style="color: #495057; font-weight: 600; margin-bottom: 8px;">
                                Degree Title
                            </MudText>
                            <MudText Typo="Typo.body1" Style="color: #6c757d; padding: 12px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #4caf50;">
                                @career!.DegreeTitle?.Value
                            </MudText>
                        </div>

                        <div>
                            <MudText Typo="Typo.subtitle1" Style="color: #495057; font-weight: 600; margin-bottom: 8px;">
                                Study Modality
                            </MudText>
                            <MudText Typo="Typo.body1" Style="color: #6c757d; padding: 12px; background: #f8f9fa; border-radius: 8px; border-left: 4px solid #4caf50;">
                                @career!.Modality?.Value
                            </MudText>
                        </div>
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>

        <!-- Program Features Card -->
        <MudItem xs="12" md="6">
            <MudCard Style="height: 100%; border-radius: 16px; border: 1px solid #f0f0f0; box-shadow: 0 8px 32px rgba(0,0,0,0.08);">
                <MudCardHeader Style="background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); border-radius: 16px 16px 0 0; padding: 24px;">
                    <CardHeaderContent>
                        <div style="display: flex; align-items: center; gap: 12px;">
                            <MudIcon Icon="@Icons.Material.Filled.Stars" Style="font-size: 28px; color: #1976d2;" />
                            <MudText Typo="Typo.h5" Style="color: #2c3e50; font-weight: 600; margin: 0;">
                                Program Features
                            </MudText>
                        </div>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent Style="padding: 24px;">
                    <div style="display: flex; flex-direction: column; gap: 20px;">
                        <div style="@GetProgramFeatureStyle()">
                            <MudIcon Icon="@((bool)career!.IsSteam! ? Icons.Material.Filled.Science : Icons.Material.Filled.MenuBook)"
                                     Style="@GetProgramIconStyle()" />
                            <div>
                                <MudText Typo="Typo.subtitle1" Style="color: #2c3e50; font-weight: 600; margin-bottom: 4px;">
                                    Program Type
                                </MudText>
                                <MudText Typo="Typo.body1" Style="color: #495057;">
                                    @((bool)career.IsSteam! ? "STEAM Program" : "Regular Program")
                                </MudText>
                                <MudText Typo="Typo.caption" Style="color: #6c757d;">
                                    @((bool)career.IsSteam! ? "Science, Technology, Engineering, Arts & Mathematics" : "Traditional Academic Program")
                                </MudText>
                            </div>
                        </div>

                        <div style="display: flex; align-items: center; gap: 16px; padding: 16px; background: #f8f9fa; border-radius: 12px; border-left: 4px solid #ff9800;">
                            <MudIcon Icon="@Icons.Material.Filled.AccessTime" Style="font-size: 32px; color: #ff9800;" />
                            <div>
                                <MudText Typo="Typo.subtitle1" Style="color: #2c3e50; font-weight: 600; margin-bottom: 4px;">
                                    Duration
                                </MudText>
                                <MudText Typo="Typo.body1" Style="color: #495057;">
                                    @career.SemestersNumber?.Number Semesters
                                </MudText>
                                <MudText Typo="Typo.caption" Style="color: #6c757d;">
                                    Approximately @(Math.Ceiling((double)career.SemestersNumber?.Number! / 2)) years
                                </MudText>
                            </div>
                        </div>
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>

    <!-- Work Information Section -->
    <MudPaper Class="pa-6 mb-8" Style="border-radius: 16px; border: 1px solid #f0f0f0; box-shadow: 0 8px 32px rgba(0,0,0,0.08);">
        <div style="display: flex; align-items: center; gap: 16px; margin-bottom: 32px; padding: 24px; background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%); border-radius: 12px;">
            <MudIcon Icon="@Icons.Material.Filled.Work" Style="font-size: 40px; color: #1976d2;" />
            <div>
                <MudText Typo="Typo.h4" Style="color: #2c3e50; font-weight: 700; margin: 0;">
                    Work Information
                </MudText>
                <MudText Typo="Typo.body1" Style="color: #495057; margin-top: 8px;">
                    Explore career opportunities and industry insights for this program
                </MudText>
            </div>
        </div>

        @if (_isLoadingWorkInfo)
        {
            <div style="text-align: center; padding: 40px;">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" />
                <MudText Typo="Typo.body1" Style="margin-top: 16px; color: #6c757d;">Loading work information...</MudText>
            </div>
        }
        else
        {
            <MudGrid Spacing="4">
                <!-- Enterprise Information -->
                <MudItem xs="12" md="6">
                    <MudCard Style="height: 100%; border-radius: 12px; border: 1px solid #e9ecef;">
                        <MudCardHeader Style="background: linear-gradient(135deg, #1976d2 0%, #1565c0 100%); color: white; border-radius: 12px 12px 0 0;">
                            <CardHeaderContent>
                                <div style="display: flex; align-items: center; gap: 12px;">
                                    <MudIcon Icon="@Icons.Material.Filled.Business" Style="font-size: 24px; color: white;" />
                                    <MudText Typo="Typo.h6" Style="font-weight: 600; margin: 0; color: white;">Enterprise</MudText>
                                </div>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Style="padding: 20px;">
                            @if (enterpriseInfo != null)
                            {
                                <MudText Typo="Typo.body1" Style="color: #495057; line-height: 1.6;">
                                    @enterpriseInfo.InformationDescription!.Content
                                </MudText>
                            }
                            else
                            {
                                <div style="text-align: center; padding: 20px;">
                                    <MudIcon Icon="@Icons.Material.Filled.BusinessCenter" Style="font-size: 48px; color: #dee2e6; margin-bottom: 12px;" />
                                    <MudText Typo="Typo.body1" Style="color: #6c757d; font-style: italic;">
                                        No enterprise information available
                                    </MudText>
                                </div>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <!-- Work Life Information -->
                <MudItem xs="12" md="6">
                    <MudCard Style="height: 100%; border-radius: 12px; border: 1px solid #e9ecef;">
                        <MudCardHeader Style="background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%); color: white; border-radius: 12px 12px 0 0;">
                            <CardHeaderContent>
                                <div style="display: flex; align-items: center; gap: 12px;">
                                    <MudIcon Icon="@Icons.Material.Filled.Balance" Style="font-size: 24px; color: white;" />
                                    <MudText Typo="Typo.h6" Style="font-weight: 600; margin: 0; color: white;">Work Life</MudText>
                                </div>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Style="padding: 20px;">
                            @if (workLifeInfo != null)
                            {
                                <MudText Typo="Typo.body1" Style="color: #495057; line-height: 1.6;">
                                    @workLifeInfo.InformationDescription!.Content
                                </MudText>
                            }
                            else
                            {
                                <div style="text-align: center; padding: 20px;">
                                    <MudText Typo="Typo.body1" Style="color: #6c757d; font-style: italic;">
                                        No work life information available
                                    </MudText>
                                </div>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <!-- Recruitment Information -->
                <MudItem xs="12" md="6">
                    <MudCard Style="height: 100%; border-radius: 12px; border: 1px solid #e9ecef;">
                        <MudCardHeader Style="background: linear-gradient(135deg, #ff9800 0%, #f57c00 100%); color: white; border-radius: 12px 12px 0 0;">
                            <CardHeaderContent>
                                <div style="display: flex; align-items: center; gap: 12px;">
                                    <MudIcon Icon="@Icons.Material.Filled.PersonSearch" Style="font-size: 24px; color: white;" />
                                    <MudText Typo="Typo.h6" Style="font-weight: 600; margin: 0; color: white;">Recruitment</MudText>
                                </div>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Style="padding: 20px;">
                            @if (recruitmentInfo != null)
                            {
                                <MudText Typo="Typo.body1" Style="color: #495057; line-height: 1.6;">
                                    @recruitmentInfo.InformationDescription!.Content
                                </MudText>
                            }
                            else
                            {
                                <div style="text-align: center; padding: 20px;">
                                    <MudIcon Icon="@Icons.Material.Filled.RecordVoiceOver" Style="font-size: 48px; color: #dee2e6; margin-bottom: 12px;" />
                                    <MudText Typo="Typo.body1" Style="color: #6c757d; font-style: italic;">
                                        No recruitment information available
                                    </MudText>
                                </div>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <!-- Opportunity Information -->
                <MudItem xs="12" md="6">
                    <MudCard Style="height: 100%; border-radius: 12px; border: 1px solid #e9ecef;">
                        <MudCardHeader Style="background: linear-gradient(135deg, #9c27b0 0%, #7b1fa2 100%); color: white; border-radius: 12px 12px 0 0;">
                            <CardHeaderContent>
                                <div style="display: flex; align-items: center; gap: 12px;">
                                    <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Style="font-size: 24px; color: white;" />
                                    <MudText Typo="Typo.h6" Style="font-weight: 600; margin: 0; color: white;">Opportunities</MudText>
                                </div>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Style="padding: 20px;">
                            @if (opportunityInfo != null)
                            {
                                <MudText Typo="Typo.body1" Style="color: #495057; line-height: 1.6;">
                                    @opportunityInfo.InformationDescription!.Content
                                </MudText>
                            }
                            else
                            {
                                <div style="text-align: center; padding: 20px;">
                                    <MudIcon Icon="@Icons.Material.Filled.Lightbulb" Style="font-size: 48px; color: #dee2e6; margin-bottom: 12px;" />
                                    <MudText Typo="Typo.body1" Style="color: #6c757d; font-style: italic;">
                                        No opportunity information available
                                    </MudText>
                                </div>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudItem>

                <!-- Industry Information -->
                <MudItem xs="12">
                    <MudCard Style="border-radius: 12px; border: 1px solid #e9ecef;">
                        <MudCardHeader Style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; border-radius: 12px 12px 0 0;">
                            <CardHeaderContent>
                                <div style="display: flex; align-items: center; gap: 12px;">
                                    <MudIcon Icon="@Icons.Material.Filled.Factory" Style="font-size: 24px; color: white;" />
                                    <MudText Typo="Typo.h6" Style="font-weight: 600; margin: 0; color: white;">Industry Overview</MudText>
                                </div>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Style="padding: 20px;">
                            @if (industryInfo != null)
                            {
                                <MudText Typo="Typo.body1" Style="color: #495057; line-height: 1.6;">
                                    @industryInfo.InformationDescription!.Content
                                </MudText>
                            }
                            else
                            {
                                <div style="text-align: center; padding: 20px;">
                                    <MudIcon Icon="@Icons.Material.Filled.Factory" Style="font-size: 48px; color: #dee2e6; margin-bottom: 12px;" />
                                    <MudText Typo="Typo.body1" Style="color: #6c757d; font-style: italic;">
                                        No industry information available
                                    </MudText>
                                </div>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        }
    </MudPaper>
    
}

@code {
    [Parameter] public string CareerName { get; set; } = string.Empty;
    private Career? career;
    private bool _isLoading = true;
    private bool _isCalculating = false;
    private bool _isLoadingWorkInfo = false;

    // Work Information variables
    private WorkInformation? enterpriseInfo;
    private WorkInformation? workLifeInfo;
    private WorkInformation? recruitmentInfo;
    private WorkInformation? opportunityInfo;
    private WorkInformation? industryInfo;

    protected override async Task OnInitializedAsync()
    {
        await LoadCareerDetails();
    }

    private async Task LoadCareerDetails()
    {
        try
        {
            _isLoading = true;
            StateHasChanged();

            var decodedName = Uri.UnescapeDataString(CareerName);
            career = await CareerService.ListSpecificCareerAsync(decodedName);

            if (career == null)
            {
                Snackbar.Add($"Career '{decodedName}' not found", Severity.Warning);
            }
            else
            {
                await LoadWorkInformation();
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading career details: {ex.Message}", Severity.Error);
            career = null;
        }
        finally
        {
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadWorkInformation()
    {
        if (career?.CareerInternalId == null) return;

        try
        {
            _isLoadingWorkInfo = true;
            StateHasChanged();

            // Get all work information IDs for this career
            var workInformationList = await WorkInformationServices.ListSpecificInformationAsync(career.CareerInternalId.Value);

            // Fetch detailed information for each work information item
            var workInformationTasks = workInformationList
                .Where(w => w.WorkInformationInternalId > 0)
                .Select(w => WorkInformationServices.ListSingleWorkInformationtAsync(w.WorkInformationInternalId))
                .ToList();

            var detailedWorkInformations = await Task.WhenAll(workInformationTasks);

            // Filter out null results and assign to variables
            var validWorkInformations = detailedWorkInformations.Where(w => w != null).ToList();

            // Since there's no type property to filter by, assign them in order or by some other logic
            // You may need to adjust this based on your actual data structure
            if (validWorkInformations.Count > 0) enterpriseInfo = validWorkInformations[0];
            if (validWorkInformations.Count > 1) workLifeInfo = validWorkInformations[1];
            if (validWorkInformations.Count > 2) recruitmentInfo = validWorkInformations[2];
            if (validWorkInformations.Count > 3) opportunityInfo = validWorkInformations[3];
            if (validWorkInformations.Count > 4) industryInfo = validWorkInformations[4];
        }
        catch (Exception ex)
        {
            // Handle errors during work information loading
        }
        finally
        {
            _isLoadingWorkInfo = false;
            StateHasChanged();
        }
    }

    private async Task CalculateScholarshipWithLoading(string? careerName)
    {
        if (string.IsNullOrEmpty(careerName)) return;

        try
        {
            _isCalculating = true;
            StateHasChanged();
            await CareerService.CalculateScholarshipAsync(careerName);
            Snackbar.Add("Scholarship calculation completed successfully!", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error calculating scholarship: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isCalculating = false;
            StateHasChanged();
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/");
    }

    private string GetProgramTypeStyle()
    {
        if (career?.IsSteam == true)
        {
            return "display: inline-block; padding: 8px 16px; border-radius: 12px; background: linear-gradient(135deg, #ff6b6b, #ee5a24); color: white; font-size: 0.9rem; font-weight: 500; backdrop-filter: blur(10px);";
        }
        else
        {
            return "display: inline-block; padding: 8px 16px; border-radius: 12px; background: rgba(255,255,255,0.2); color: white; font-size: 0.9rem; font-weight: 500; backdrop-filter: blur(10px);";
        }
    }

    private string GetProgramFeatureStyle()
    {
        if (career?.IsSteam == true)
        {
            return "display: flex; align-items: center; gap: 16px; padding: 16px; background: linear-gradient(135deg, #ff7675, #e17055); border-radius: 12px; color: white;";
        }
        else
        {
            return "display: flex; align-items: center; gap: 16px; padding: 16px; background: #e3f2fd; border-radius: 12px; border-left: 4px solid #1976d2;";
        }
    }

    private string GetProgramIconStyle()
    {
        if (career?.IsSteam == true)
        {
            return "font-size: 32px; color: white;";
        }
        else
        {
            return "font-size: 32px; color: #1976d2;";
        }
    }
}