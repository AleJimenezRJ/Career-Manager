// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace UCR.ECCI.IS.VRCampus.Frontend.Blazor.Infrastructure.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AddCareerDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The degreeTitle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DegreeTitle { get; set; }
#nullable restore
#else
        public string DegreeTitle { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The isSteam property</summary>
        public bool? IsSteam { get; set; }
        /// <summary>The modality property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Modality { get; set; }
#nullable restore
#else
        public string Modality { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The semestersNumber property</summary>
        public int? SemestersNumber { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::UCR.ECCI.IS.VRCampus.Frontend.Blazor.Infrastructure.Kiota.Models.AddCareerDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::UCR.ECCI.IS.VRCampus.Frontend.Blazor.Infrastructure.Kiota.Models.AddCareerDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::UCR.ECCI.IS.VRCampus.Frontend.Blazor.Infrastructure.Kiota.Models.AddCareerDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "degreeTitle", n => { DegreeTitle = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "isSteam", n => { IsSteam = n.GetBoolValue(); } },
                { "modality", n => { Modality = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "semestersNumber", n => { SemestersNumber = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("degreeTitle", DegreeTitle);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("isSteam", IsSteam);
            writer.WriteStringValue("modality", Modality);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("semestersNumber", SemestersNumber);
        }
    }
}
#pragma warning restore CS0618
